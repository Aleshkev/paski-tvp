{"version":3,"sources":["App.js","index.js"],"names":["Option","props","color","over","showCorrect","isCorrect","Box","display","style","width","transition","Grow","in","marginTop","Check","Clear","flexGrow","Button","size","onClick","text","url","window","open","searchInNewTab","Level","correct","random","n","options","i","push","sample","realData","fakeData","state","clicked","Typography","mt","this","map","option","setState","onAnswer","float","Tooltip","title","variant","m","endIcon","ArrowForward","onNext","Component","App","level","incorrect","showHelp","Container","maxWidth","CssBaseline","mb","justifyContent","Badge","badgeContent","showZero","overlap","fontSize","ok","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08e2a27d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {\n    Badge,\n    Box,\n    Button,\n    Container,\n    CssBaseline,\n    Grow,\n    Tooltip, Typography\n} from '@material-ui/core';\nimport {random, sample} from \"lodash\";\n\nimport realData from \"./real.json\";\nimport fakeData from \"./fake.json\";\nimport {ArrowForward, Check, Clear, Help} from \"@material-ui/icons\";\n\nconst colorOK = \"#1B5E20\", colorNotOK = \"#b71c1c\";\n\nfunction searchInNewTab(text) {\n    const url = `http://www.google.com/search?q=\"${text}\"+site:wiadomosci.tvp.pl`;\n    window.open(url, \"_blank\");\n}\n\nfunction Option(props) {\n\n    const color = props.over ? (props.showCorrect ? (props.isCorrect ? colorOK : colorNotOK) : \"#9E9E9E\") : \"#212121\";\n\n    return <Box display={\"flex\"}>\n        <Box style={{\n            width: props.over ? 32 : 0,\n            transition: \"width 150ms ease-in-out\"\n        }}>\n            {props.over && <Grow in={true} style={{marginTop: \".275em\"}}>\n                {props.isCorrect ? <Check style={{color: color}}/> :\n                    <Clear style={{color: color}}/>}\n            </Grow>}\n        </Box>\n        <Box flexGrow={1}>\n            <Button size={\"large\"} style={{width: \"100%\", color: color}}\n                    onClick={() => {\n                        props.over ? searchInNewTab(props.text) : props.onClick()\n                    }}>{props.text}</Button>\n        </Box>\n    </Box>\n}\n\n\nclass Level extends Component {\n    constructor(props) {\n        super(props);\n        const n = 4;\n        const correct = random(0, n - 1);\n        const options = [];\n        for (let i = 0; i < n; ++i) options.push(sample(i === correct ? realData : fakeData));\n        this.state = {\n            correct: correct, options: options, over: false, clicked: null\n        }\n    }\n\n    render() {\n        return <Grow in={true}>\n            <Box>\n                <Typography>\n                    Który pasek pojawił się\n                    w <em>Wiadomościach?</em><br/> Wymagana\n                    jest <em>pełna</em> zgodność z oryginałem.\n                </Typography>\n                <Box mt={2}>\n                    {this.state.options.map((option, i) =>\n                        <Box key={i}>\n                            <Option text={option}\n                                    isCorrect={i === this.state.correct}\n                                    over={this.state.over}\n                                    onClick={() => {\n                                        this.setState({over: true, clicked: i});\n                                        this.props.onAnswer(i === this.state.correct);\n                                    }}\n                                    showCorrect={i === this.state.correct || i === this.state.clicked}/></Box>)}\n                </Box>\n                <Box mt={2}>\n                    <Grow in={this.state.over} style={{float: \"right\"}}>\n                        <Tooltip\n                            title={\"Kliknij żeby przejść dalej, lub kliknij którąś z odpowiedzi żeby ją wyszukać w internecie.\"}>\n                            <Button variant={\"contained\"} size={\"large\"}\n                                    color={\"primary\"}\n                                    m={1} endIcon={<ArrowForward/>}\n                                    onClick={() => {\n                                        this.props.onNext();\n                                    }}>\n                                Dalej\n                            </Button>\n                        </Tooltip>\n                    </Grow>\n                </Box>\n            </Box>\n        </Grow>;\n    }\n}\n\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            level: 0,\n            correct: 0,\n            incorrect: 0,\n            showHelp: false\n        }\n    }\n\n    render() {\n        return <Container style={{maxWidth: 700}}>\n            <CssBaseline/>\n            <Box mt={2} mb={2} display={\"flex\"}\n                 justifyContent={\"flex-end\"}>\n                <Box>\n                    <Tooltip\n                        title={`Poprawne odpowiedzi: ${this.state.correct}`}>\n                        <Badge badgeContent={this.state.correct}\n                               showZero={true}\n                               overlap={\"circle\"} color={\"primary\"}>\n                            <Check fontSize={\"large\"} color={\"primary\"}/>\n                        </Badge>\n                    </Tooltip>\n                </Box>\n                <Box>\n                    <Tooltip\n                        title={`Niepoprawne odpowiedzi: ${this.state.incorrect}`}>\n                        <Badge\n                            badgeContent={this.state.incorrect}\n                            showZero={true} overlap={\"circle\"}\n                            color={\"primary\"}>\n                            <Clear fontSize={\"large\"} color={\"primary\"}/>\n                        </Badge>\n                    </Tooltip>\n                </Box>\n            </Box>\n            <Level key={this.state.level} over={this.state.over}\n                   onAnswer={(ok) => this.setState({\n                       correct: this.state.correct + (ok ? 1 : 0),\n                       incorrect: this.state.incorrect + (ok ? 0 : 1)\n                   })}\n                   onNext={() => this.setState({level: this.state.level + 1})}/>\n        </Container>\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}